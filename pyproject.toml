[build-system]
build-backend = "hatchling.build"
requires = [
    "hatchling>=1.10",
    "numpy",
]

[project]
name = "pyshocks"
version = "2025.7"
description = "Adjoint-based optimization of flows with shocks"
readme = "README.rst"
keywords = [
    "jax",
    "optimization",
    "shocks",
    "weno",
]
license = "MIT"
maintainers = [
    { name = "Alexandru Fikl", email = "alexfikl@gmail.com" },
]
authors = [
    { name = "Alexandru Fikl", email = "alexfikl@gmail.com" },
]
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Other Audience",
    "Intended Audience :: Science/Research",
    "Natural Language :: English",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering",
    "Topic :: Utilities",
]
dependencies = [
    "jax>=0.4.1",
    "jaxlib>=0.4.1",
    "numpy>=1.19",
    "rich",
]
optional-dependencies.dev = [
    "doc8",
    "mypy",
    "pyproject-fmt",
    "pytest",
    "reuse",
    "ruff",
    "types-dataclasses",
    "typos",
    "uv",
]
optional-dependencies.docs = [
    "sphinx>=6",
    "sphinx-book-theme",
]
optional-dependencies.vis = [
    "matplotlib",
    "scienceplots",
]
# optional-dependencies.pyweno = [
#     "pyweno @ git+https://github.com/alexfikl/PyWENO.git@numpy-2.0#egg=PyWENO",
# ]
urls.Documentation = "https://pyshocks.readthedocs.io"
urls.Repository = "https://github.com/alexfikl/pyshocks"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.sdist]
exclude = [
    ".github",
    ".ci",
    "docs/_build",
]

[tool.hatch.build.targets.wheel]
packages = [
    "src/pyshocks",
]

[tool.ruff]
target-version = "py38"
line-length = 88

preview = true
lint.select = [
    "A",   # flake8-builtins
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "E",   # flake8
    "F",   # flake8
    "FBT", # flake8-boolean-trap
    "G",   # flake8-logging-format
    "I",   # flake8-isort
    "ISC", # flake8-implicit-str-concat
    "N",   # pep8-naming
    "NPY", # numpy
    "PL",  # pylint
    "PT",  # flake8-pytest-style
    "Q",   # flake8-quotes
    "RUF", # ruff
    "S",   # flake8-bandit
    "SIM", # flake8-simplify
    "UP",  # pyupgrade
    "W",   # flake8
]
lint.ignore = [
    "A005",    # shadowing-builtin-module
    "E402",    # module-import-not-at-top-of-file
    "ISC001",  # single-line-implicit-string-concatenation
    "N803",    # invalid-argument-name
    "N806",    # non-lowercase-variable-in-function
    "PLC0415", # import-outside-top-level
    "PLC2801", # unnecessary-dunder-call
    "PLR0912", # too-many-branches
    "PLR0913", # too-many-arguments
    "PLR0914", # too-many-locals
    "PLR0915", # too-many-statements
    "PLR0917", # too-many-positional
    "PLR2004", # magic-value-comparison
    "PLR6104", # non-augmented-assignment
    "S101",    # assert
    "S102",    # exec-builtin
    "S301",    # suspicious-pickle-usage
    "S403",    # suspicious-pickle-import
    "SIM108",  # use-ternary-operator
]

lint.per-file-ignores."pyshocks/__init__.py" = [
    "FBT003",
]
lint.flake8-quotes.docstring-quotes = "double"
lint.flake8-quotes.inline-quotes = "double"
lint.flake8-quotes.multiline-quotes = "double"
lint.isort.known-first-party = [
    "pyshocks",
]

[tool.mypy]
strict = true
python_version = "3.10"
hide_error_codes = false
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = [
    "cloudpickle.*",
    "matplotlib.*",
    "pyweno.*",
    "seaborn.*",
    "scienceplots.*",
    "scipy.*",
    "jaxlib.cpu.*",
]
ignore_missing_imports = true

[tool.doc8]
max-line-length = 88
ignore-path = "docs/_build"
