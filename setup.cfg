[metadata]
name = pyshocks
version = 2022.7
description = Adjoint-based optimization of flows with shocks
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/alexfikl/pyshocks
author = Alexandru Fikl
author_email = alexfikl@gmail.com
license = MIT
license_file = LICENSES/MIT.txt
classifiers =
    Development Status :: 3 - Alpha
    Intended Audience :: Developers
    Intended Audience :: Other Audience
    Intended Audience :: Science/Research
    License :: OSI Approved :: MIT License
    Natural Language :: English
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Topic :: Scientific/Engineering
    Topic :: Utilities
keywords =
    optimization
    shocks
    jax

[options]
packages = find:
install_requires =
    jax
    jaxlib
    numpy
    typing_extensions; python_version<'3.10'
python_requires = >=3.8
setup_requires =
    setuptools>=42

[options.extras_require]
dev =
    SciencePlots
    matplotlib
    flake8
    flake8-quotes
    furo
    mypy
    pep8-naming
    pylint
    pytest
fancy =
    matplotx
    multimethod
pyweno =
    PyWENO@git+https://github.com/memmett/PyWENO.git#egg=PyWENO
    sympy

[flake8]
ignore = E123,E124,E126,E127,E128,E203,E226,E402,W503,D102,D103
max-line-length = 88
inline-quotes = double
multiline-quotes = double

[pylint.master]
jobs = 4
ignored-modules = matplotlib

[pylint.messages_control]
disable =
    C0103,                  # invalid-name
    C0114,                  # missing-module-docstring
    C0115,                  # missing-class-docstring
    C0116,                  # missing-function-docstring
    C0411,                  # wrong-import-order
    C0415,                  # import-outside-toplevel
    E1136,                  # unsubscriptable-object
    R0801,                  # duplicate-code
    R0901,                  # too-many-ancestors
    R0902,                  # too-many-instance-attributes
    R0903,                  # too-few-public-methods
    R0913,                  # too-many-arguments
    R0914,                  # too-many-locals
    R0915,                  # too-many-statements
    W0122,                  # exec-used
    W0511,                  # fixme
    W0603,                  # global-statement
    W0611,                  # unused-import
    W0613                   # unused-argument

[mypy]
warn_unused_ignores = True

[mypy-importlib_metadata.*]
ignore_missing_imports = True

[mypy-matplotlib.*]
ignore_missing_imports = True

[mypy-matplotx.*]
ignore_missing_imports = True

[mypy-pyweno.*]
ignore_missing_imports = True
